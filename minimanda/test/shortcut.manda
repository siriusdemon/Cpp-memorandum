(defmacro ASSERT (actual expected)
  (assert actual expected (str expected)))


(def main() -> int
   
    (ASSERT 10 (do 
                (let a : [2 2 int] #a[#a[1 2] #a[3 4]])
                (+ (iget a 0 0)
                   (iget a 0 1)
                   (iget a 1 0)
                   (iget a 1 1))))
    (ASSERT 5 (do
                (let c :[2 2 int])
                (set (iget c 0) #a[1 2])
                (set (iget c 1) #a[3 4])
                (+ (iget c 0 1)
                    (iget c 1 0))))
    (ASSERT 5 (do
                (let c :[2 2 int])
                (set (iget c 0) #a[1 2])
                (set (iget c 1) #a[3 4])
                (+ (iget (iget c 0) 1)
                    (iget (iget c 1) 0))))
    (ASSERT 42 (do
              (let a :[2 int] #a[22 20])
              (let b :[1 int] #a[0])
              (+ (iget a 0) (iget a 1) (iget b 0))))

    (ASSERT 403 (do
                    (let a :[2 5 char] #a("ab" "cd"))
                    (let b :[2 5 char] #a("ef" "gh"))
                    (+ (iget a 0 0) (iget a 1 1)
                       (iget b 0 1) (iget b 1 1))))

    (ASSERT 97 (do
                (let a :[5 char] "abcd")
                (iget a 0)))
    0
)